# Jellycli reference configuration file

# This file is for reference purposes only. Jellycli creates file pointed to it as config file
# if the file does not exist or is empty.
# Any key can be set with environment variables. See Readme or use command
# jellycli list-env to list available variables.

# Gui settings
gui:
  # debug mode. When enabled, a new shortcut is added for creating debug dump.
  debug_mode: false

  # If mouse support is enabled, maximum interval (ms) for double click.
  # Default: 220
  double_click_ms: 220

  # Enable server-side filtering if items. Results depend on backend being used.
  enable_filtering: false

  # enable client-side filtering of list items.
  enable_results_filtering: true

  # enable server-side sorting. Results depend on item type and backend being used.
  enable_sorting: false

  # Limit recent songs to a sensible value.
  # When set to false, 'recent songs' are actually
  # all songs ever listened on this account
  limit_recently_played: true

  # Enable mouse support
  mouse_enabled: true

  # Paging, default: 100
  pagesize: 100

  # limit to search queries, default 30.
  search_results_limit: 30

  # types to search for, case-sensitive values. Default: Artist, Album, Song, Playlist
  search_types:
    - Artist
    - Album
    - Song
    - Playlist

  # volume control total steps
  volume_steps: 20

# Jellyfin settings. All values are saved when logging in.
jellyfin:
  url: http://localhost/jellyfin
  # To force logout, clear token
  token:
  # Don't touch these
  user_id:
  device_id:
  server_id:
  music_view:

# Subsonic configuration
# Salt & token are created automatically from password during login.
# To force logout, remove salt & token
subsonic:
  url: http://localhost
  username:
  salt:
  token:

# Audio & application settings
player:
  # Server to connect to by default. Either jellyfin or subsonic.
  server: jellyfin

  # Logging
  log_file: /tmp/jellycli.log

  # Allowed values: trace|debug|info|warning|error|fatal
  log_level: warning

  # Low-level audio buffer duration. Set smaller (e.g. 50ms) for less delay and more cpu usage,
  # increase if audio stutters (to 300, or even 500) or to use less cpu. Default value: 150.
  audio_buffering_ms: 150

  # http buffering duration in seconds, how much to buffer from server before starting audio
  http_buffering_s: 5

  # max http buffering limit in MiB. Setting this to high enough ensures smooth play even with longer tracks.
  # 20 MiB with flac ~ 10 min of audio buffered.
  http_buffering_limit_mem: 20

  # If enabled, user can control playback remotely with another client.
  enable_remote_control: true

